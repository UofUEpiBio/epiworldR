# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check-final

env: 
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: windows-latest, r: 'devel', http-user-agent: 'release'}
          # Use older ubuntu to maximise backward compatibility
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        if: ${{ matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'release' }}
        with:
          args: 'c("--as-cran", "--no-manual")'
          upload-snapshots: false
          upload-results: false
          check-dir: '"check"'
          error-on: '"warning"'

      - uses: r-lib/actions/check-r-package@v2
        if: ${{ matrix.config.os != 'ubuntu-latest' || matrix.config.r != 're;ease' }}
        with:
          upload-snapshots: false
          upload-results: false
          check-dir: '"check"'
          error-on: '"warning"'

      # Upload the built package as an artifact
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'release' }}
        with:
          name: ${{ matrix.config.os }}-pkg
          path: ${{ github.workspace }}/*.tar.gz
      
  epiworldShiny:
    runs-on: ubuntu-latest
    container: rocker/tidyverse:4.4.0

    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'UofUEpiBio/epiworldRShiny'
          ref: 'main'
          fetch-depth: 1

      - name: Install dependencies
        run: |
          install2.r -n 2 shinyjs shinydashboard DT shinycssloaders plotly
          installGithub.r UofUEpiBio/epiworldR@${{ github.sha }}
      
      - name: Check the package
        run: |
          R CMD build .
          R CMD check epiworldRShiny_*tar.gz

  epiworldRShiny-cran:
    runs-on: ubuntu-latest
    container: rocker/tidyverse:4.4.0

    steps:
      - name: Get epiworldRShiny
        run: |
          wget \
            https://cran.r-project.org/src/contrib/epiworldRShiny_0.1-0.tar.gz

      - name: Install dependencies
        run: |
          install2.r -n 2 shinyjs shinydashboard DT shinycssloaders plotly
          installGithub.r UofUEpiBio/epiworldR@${{ github.sha }}
      
      - name: Check the package
        run: |
          R CMD check epiworldRShiny_*tar.gz

        
          

